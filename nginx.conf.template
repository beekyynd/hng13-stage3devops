# Custom log format with pool, release, upstream details
log_format detailed_access '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'pool=$upstream_http_x_app_pool '
                          'release=$upstream_http_x_release_id '
                          'upstream_status=$upstream_status '
                          'upstream_addr=$upstream_addr '
                          'request_time=$request_time '
                          'upstream_response_time=$upstream_response_time';

access_log /var/log/nginx/access.log detailed_access;

# Define Blue pool with Green as backup
upstream backend_blue_primary {
    server app_blue:3000 max_fails=1 fail_timeout=5s;
    server app_green:3000 backup;
}


# Map ACTIVE_POOL environment variable to the correct backend
map $active_pool $backend {
    default backend_blue_primary;
    "blue" backend_blue_primary;
}

server {
    listen 80;
    set $active_pool "${ACTIVE_POOL}";
    
    location / {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Timeouts for failover detection
        proxy_connect_timeout 2s;
        proxy_read_timeout 3s;
        
        # Retry logic - move to backup on errors
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        
        # Don't buffer, for real-time response
        proxy_buffering off;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}
